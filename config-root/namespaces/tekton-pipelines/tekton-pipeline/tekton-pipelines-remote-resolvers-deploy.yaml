# Source: tekton-pipeline/templates/tekton-pipelines-remote-resolvers-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: resolvers
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v1.2.0
    pipeline.tekton.dev/release: v1.2.0
    version: v1.2.0
    gitops.jenkins-x.io/pipeline: 'namespaces'
  name: tekton-pipelines-remote-resolvers
  annotations:
    meta.helm.sh/release-name: 'tekton-pipeline'
    meta.helm.sh/release-namespace: 'tekton-pipelines'
    wave.pusher.com/update-on-config-change: 'true'
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: resolvers
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: resolvers
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-resolvers
        app.kubernetes.io/component: resolvers
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: resolvers
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v1.2.0
        pipeline.tekton.dev/release: v1.2.0
        version: v1.2.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: resolvers
                  app.kubernetes.io/instance: default
                  app.kubernetes.io/name: resolvers
                  app.kubernetes.io/part-of: tekton-pipelines
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_MIN_VERSION
          value: v1.28.0
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election-resolvers
        - name: METRICS_DOMAIN
          value: tekton.dev/resolution
        - name: PROBES_PORT
          value: "8080"
        - name: ARTIFACT_HUB_API
          value: https://artifacthub.io/
        - name: TEKTON_HUB_API
          value: https://api.hub.tekton.dev/
        image: ghcr.io/tektoncd/pipeline/resolvers-ff86b24f130c42b88983d3c13993056d:v1.2.0@sha256:939102e67d09d277bdf19bc83b5fbc45ed3cbcf840017956b71995c3e68ed289
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8080
          name: probes
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: tmp-clone-volume
      nodeSelector:
      serviceAccountName: tekton-pipelines-resolvers
      tolerations:
      volumes:
      - emptyDir:
          sizeLimit: 4Gi
        name: tmp-clone-volume
